import bisect
import sys
from typing import List

input = sys.stdin.readline


def solve(n: int, a: List[int]) -> int:
    held_count = 0
    a = sorted(a)
    alpha, beta = a[:n // 2], a[n // 2:]
    lo = 0
    for e in alpha:
        i = bisect.bisect_left(beta, e * 2, lo)
        if i < len(beta):
            held_count += 1
            lo = i + 1

    return n - held_count


# assert solve(100,
#              [154, 60, 97, 638, 139, 150, 570, 579, 601, 647, 804, 237, 245, 549, 288, 347, 778, 282, 916, 441, 974,
#               145, 957, 886, 655, 702, 930, 618, 132, 520, 972, 48, 94, 54, 682, 433, 896, 134, 845, 636, 242, 842, 125,
#               141, 240, 130, 409, 666, 948, 938, 604, 110, 474, 484, 364, 40, 807, 271, 438, 288, 201, 814, 754, 589,
#               341, 576, 146, 952, 819, 923, 222, 535, 336, 83, 314, 911, 303, 911, 384, 601, 249, 330, 735, 271, 142,
#               204, 405, 783, 775, 449, 590, 139, 109, 276, 45, 205, 454, 836, 82, 841]) == 50
# assert solve(100,
#              [678, 771, 96, 282, 135, 749, 168, 668, 17, 658, 979, 446, 998, 331, 606, 756, 37, 515, 538, 205, 647, 547,
#               904, 842, 647, 286, 774, 414, 267, 791, 595, 465, 8, 327, 855, 174, 339, 946, 184, 250, 807, 422, 679,
#               980, 64, 530, 312, 351, 676, 911, 803, 991, 669, 50, 293, 841, 545, 598, 737, 894, 231, 754, 588, 83, 873,
#               767, 833, 482, 905, 903, 970, 571, 715, 59, 777, 697, 537, 861, 339, 212, 149, 889, 905, 70, 970, 307,
#               830, 465, 968, 291, 430, 317, 942, 944, 330, 235, 814, 880, 415, 76]) == 58
# assert solve(12, [3, 99, 24, 46, 75, 63, 57, 55, 10, 62, 34, 52]) == 7
# assert solve(8, [2, 5, 7, 6, 9, 8, 4, 2]) == 5

n = int(input())
a = []
for _ in range(n):
    a.append(int(input()))

r = solve(n, a)
print(r)
